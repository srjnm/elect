{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend server of ELECT web application.",
        "title": "ELECT REST API",
        "contact": {
            "name": "ELECT API Support",
            "email": "surajnm15@gmail.com"
        },
        "version": "1.0"
    },
    "host": "e1ect.herokuapp.com",
    "basePath": "/",
    "paths": {
        "/api/candidate": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Enroll as a candidate for the election you are part of",
                "parameters": [
                    {
                        "type": "string",
                        "name": "election_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "sex",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Display Picture",
                        "name": "display_picture",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "poster",
                        "name": "poster",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "ID Proof",
                        "name": "id_proof",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/candidate/approve/{id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Approve enrolled candidates to the election you created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/candidate/unapprove/{id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Unapprove enrolled candidates to the election you created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/election": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Edit the election you created",
                "parameters": [
                    {
                        "description": "Edit Election",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EditElectionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Create Election if you are an Admin",
                "parameters": [
                    {
                        "description": "Election Details",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateElectionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/election/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Get details of the election you created or you are part of",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GeneralElectionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Delete the election you created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/elections": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "election"
                ],
                "summary": "Get a list of election you are part of OR you have created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order By - starting_at",
                        "name": "orderby",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order - asc or desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Elections"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/participant": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participant"
                ],
                "summary": "Delete the participant of the election you created",
                "parameters": [
                    {
                        "description": "Delete Participant",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteParticipantDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/participants/{id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participant"
                ],
                "summary": "Add participants to the election you created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Participants List",
                        "name": "participants",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/registeredstudent/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete the student you have registered",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/registeredstudents": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a list of Students you've registered",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order By - reg_number",
                        "name": "orderby",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order - asc or desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GeneralStudentDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/api/registerstudents": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register Students if you are an Admin",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Student List",
                        "name": "register",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "A user has to be logged in currently to access this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/otp": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Submit OTP",
                "parameters": [
                    {
                        "description": "Verify OTP",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "A user needs a valid refresh token to access this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/setpassword": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify Email and Set Password",
                "parameters": [
                    {
                        "description": "Verify",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Verify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateElectionDTO": {
            "type": "object",
            "required": [
                "ending_at",
                "locking_at",
                "starting_at",
                "title"
            ],
            "properties": {
                "ending_at": {
                    "type": "string"
                },
                "gender_specific": {
                    "type": "boolean"
                },
                "locking_at": {
                    "type": "string"
                },
                "starting_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteParticipantDTO": {
            "type": "object",
            "required": [
                "election_id",
                "participant_id"
            ],
            "properties": {
                "election_id": {
                    "type": "string"
                },
                "participant_id": {
                    "type": "string"
                }
            }
        },
        "dto.EditElectionDTO": {
            "type": "object",
            "required": [
                "election_id"
            ],
            "properties": {
                "election_id": {
                    "type": "string"
                },
                "ending_at": {
                    "type": "string"
                },
                "gender_specific": {
                    "type": "boolean"
                },
                "locking_at": {
                    "type": "string"
                },
                "starting_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Elections": {
            "type": "object",
            "properties": {
                "election_id": {
                    "type": "string"
                },
                "ending_at": {
                    "type": "string"
                },
                "gender_specific": {
                    "type": "boolean"
                },
                "locking_at": {
                    "type": "string"
                },
                "starting_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.GeneralCandidateDTO": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "candidate_id": {
                    "type": "string"
                },
                "display_picture": {
                    "type": "string"
                },
                "election_id": {
                    "type": "string"
                },
                "id_proof": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "sex": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.GeneralElectionDTO": {
            "type": "object",
            "properties": {
                "candidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GeneralCandidateDTO"
                    }
                },
                "election_id": {
                    "type": "string"
                },
                "ending_at": {
                    "type": "string"
                },
                "gender_specific": {
                    "type": "boolean"
                },
                "locking_at": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GeneralParticipantDTO"
                    }
                },
                "starting_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.GeneralParticipantDTO": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "participant_id": {
                    "type": "string"
                },
                "register_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.GeneralStudentDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "reg_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.OTP": {
            "type": "object",
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "dto.OTPResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.Verify": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}